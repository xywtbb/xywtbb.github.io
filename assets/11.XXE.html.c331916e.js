import{_ as n,V as a,W as s,Z as t}from"./framework.0d0b2430.js";const p="/images/Web安全/XML&XXE.png",e="/images/Web安全/各个脚本语言支持的协议.jpg",o={},c=t('<h1 id="xee" tabindex="-1"><a class="header-anchor" href="#xee" aria-hidden="true">#</a> XEE</h1><h2 id="xxe和xml之利用和检测绕过" tabindex="-1"><a class="header-anchor" href="#xxe和xml之利用和检测绕过" aria-hidden="true">#</a> XXE和XML之利用和检测绕过</h2><p><img src="'+p+'" alt="XML&amp;XXE" loading="lazy"></p><p><strong>定义：</strong></p><p>XML被设计为传输和存储数据，XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素，其焦点时数据的内容，其把数据从HTML分离，是独立于软件和硬件的信息传输工具。XXE漏洞全称XML外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站等危害。</p><p><strong>差异：</strong></p><p>XML被设计为传输和存储数据，其焦点是数据的内容。</p><p>HTML被设计用来显示数据，其焦点是数据的外观。</p><p>HTML旨在显示信息，而XML旨传输信息。</p><p><img src="'+e+`" alt="各个脚本语言支持的协议" loading="lazy"></p><h4 id="xxe漏洞修复与防御方案-php、java、python-过滤及禁用" tabindex="-1"><a class="header-anchor" href="#xxe漏洞修复与防御方案-php、java、python-过滤及禁用" aria-hidden="true">#</a> XXE漏洞修复与防御方案-php、java、python-过滤及禁用</h4><p><strong>方案1：禁用外部实体：</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">PHP</span><span class="token punctuation">:</span>
<span class="token function">libxml_disable_entity_loader</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">JAVA</span><span class="token operator">:</span>
<span class="token class-name">DocumentBuilderFactory</span> dbf
    <span class="token operator">=</span><span class="token class-name">DocumentBuilderFactory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dbf<span class="token punctuation">.</span><span class="token function">setExpandEntityReferences</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etreexmlData <span class="token operator">=</span> 
etree<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>xmlSource<span class="token punctuation">,</span> etree<span class="token punctuation">.</span>XMLParser<span class="token punctuation">(</span>resolve_entities<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方案2：过滤用户提交的XML数据：</strong></p><p>过滤关键词：&lt;!DOCTYPE 和 &lt;!ENTITY ， 或者 SYSTEM 和 PUBLIC</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--XML声明--&gt;</span>
<span class="token prolog">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
<span class="token comment">&lt;!--文档类型定义--&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">note</span> <span class="token punctuation">[</span><span class="token internal-subset"> <span class="token comment">&lt;!--定义此文档是note类型的文档--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">note</span> <span class="token attr-name">{to,</span> <span class="token attr-name">from,</span> <span class="token attr-name">heading,</span> <span class="token attr-name">body}</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!--定义note元素有四个元素--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">to</span> <span class="token attr-name">(#PCDATA)</span><span class="token punctuation">&gt;</span></span>		<span class="token comment">&lt;!--定义to元素为&quot;#PCDATA&quot;类型--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">from</span> <span class="token attr-name">(#PCDATA)</span><span class="token punctuation">&gt;</span></span>	<span class="token comment">&lt;!--定义from元素为&quot;#PCDATA&quot;类型--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">head</span> <span class="token attr-name">(#PCDATA)</span><span class="token punctuation">&gt;</span></span>	<span class="token comment">&lt;!--定义head元素为&quot;#PCDATA&quot;类型--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">body</span> <span class="token attr-name">(#PCDATA)</span><span class="token punctuation">&gt;</span></span>	<span class="token comment">&lt;!--定义body元素为&quot;#PCDATA&quot;类型--&gt;</span>
</span><span class="token punctuation">]</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!--文档元素</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>note</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>to</span><span class="token punctuation">&gt;</span></span>Dava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>to</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">&gt;</span></span>Tom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>Reminder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>You are a good man<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>note</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>DTD：</strong></p><p>文档类型定义（DTD）可定义合法的XML文档构建模块；它使用一系列合法的元素来定义文档的结构；DTD可被成行的声明于 XML 文档中，也可作为一个外部引用。</p><p>（1）内部的 DOCTYPE 声明</p><p><code> &lt;!DOCTYPE 根元素 [元素声明]&gt;</code></p><p>（2）外部文档声明</p><p><code> &lt;!DOCTYPE 根元素 SYSTEM “文件名”&gt;</code></p><p><strong>DTD实体：</strong></p><p>（1）内部实体声明</p><p><code> &lt;!DOCTYPE 实体名称 “实体的值&quot;&gt;</code></p><p>（2）外部实体声明</p><p><code> &lt;!DOCTYPE 实体名称 SYSTEM “URI”&gt;</code></p><p>（3）参数实体声明</p><p><code> &lt;!DOCTYPE %实体名称 “实体的值”&gt;</code></p><p><code> &lt;!DOCTYPE %实体名称 SYSTEM “URI”&gt;</code></p>`,32),l=[c];function i(u,d){return a(),s("div",null,l)}const k=n(o,[["render",i],["__file","11.XXE.html.vue"]]);export{k as default};
