import{_ as a,V as i,W as p,Z as l}from"./framework.0d0b2430.js";const s="/images/CTF/BUUCTF-Web/Knife1-1.png",e="/images/CTF/BUUCTF-Web/Knife1-2.png",o="/images/CTF/BUUCTF-Web/Knife1-3.png",g="/images/CTF/BUUCTF-Web/Knife1-4.jpg",r="/images/CTF/BUUCTF-Web/Knife1-5.jpg",t="/images/CTF/BUUCTF-Web/Knife1-6.jpg",n="/images/CTF/BUUCTF-Web/Upload1-1.png",c="/images/CTF/BUUCTF-Web/Upload1-2.png",d="/images/CTF/BUUCTF-Web/Upload1-3.png",m="/images/CTF/BUUCTF-Web/Upload1-4.png",b="/images/CTF/BUUCTF-Web/Upload1-5.png",U="/images/CTF/BUUCTF-Web/Upload1-6.png",F="/images/CTF/BUUCTF-Web/Upload1-7.png",C="/images/CTF/BUUCTF-Web/Upload1-8.png",_="/images/CTF/BUUCTF-Web/Upload1-9.png",T="/images/CTF/BUUCTF-Web/php1-1.png",h="/images/CTF/BUUCTF-Web/php1-2.png",y="/images/CTF/BUUCTF-Web/php1-9.png",f="/images/CTF/BUUCTF-Web/php1-3.png",B="/images/CTF/BUUCTF-Web/php1-4.png",u="/images/CTF/BUUCTF-Web/php1-5.png",W="/images/CTF/BUUCTF-Web/php1-6.png",z="/images/CTF/BUUCTF-Web/php1-7.png",E="/images/CTF/BUUCTF-Web/php1-8.png",k="/images/CTF/BUUCTF-Web/BackupFile1-1.png",x="/images/CTF/BUUCTF-Web/BackupFile1-3.jpg",M="/images/CTF/BUUCTF-Web/BackupFile1-4.png",q="/images/CTF/BUUCTF-Web/EasyCale1-1.png",K="/images/CTF/BUUCTF-Web/EasyCale1-2.png",w="/images/CTF/BUUCTF-Web/EasyCale1-3.png",j="/images/CTF/BUUCTF-Web/EasyCale1-4.png",P="/images/CTF/BUUCTF-Web/EasyCale1-5.png",v="/images/CTF/BUUCTF-Web/BuyFlag-1.png",G="/images/CTF/BUUCTF-Web/BuyFlag-2.png",S="/images/CTF/BUUCTF-Web/BuyFlag-3.png",O="/images/CTF/BUUCTF-Web/EasyMd5-1.png",A="/images/CTF/BUUCTF-Web/EasyMd5-2.png",D="/images/CTF/BUUCTF-Web/EasyMd5-3.png",I="/images/CTF/BUUCTF-Web/EasyMd5-4.png",V="/images/CTF/BUUCTF-Web/EasyMd5-5.png",H="/images/CTF/BUUCTF-Web/EasyMd5-6.png",J="/images/CTF/BUUCTF-Web/EasyMd5-7.png",N={},R=l('<h1 id="buuctf-web" tabindex="-1"><a class="header-anchor" href="#buuctf-web" aria-hidden="true">#</a> BUUCTF-Web</h1><p>Web类CTF做题笔记</p><h2 id="极客大挑战2019-knife-1" tabindex="-1"><a class="header-anchor" href="#极客大挑战2019-knife-1" aria-hidden="true">#</a> [极客大挑战2019]Knife 1</h2><p>题目上给了使用菜刀的提示。<br><img src="'+s+'" alt="Knife1-1" loading="lazy"><br> 所以直接使用中国蚁剑连接。<br><img src="'+e+'" alt="Knife1-2" loading="lazy"><img src="'+o+'" alt="Knife1-3" loading="lazy"> 成功连接后，点进去查看。<br><img src="'+g+'" alt="Knife1-4" loading="lazy"> 在根目录下找到flag文件。<br><img src="'+r+'" alt="Knife1-5" loading="lazy"><img src="'+t+'" alt="Knife1-6" loading="lazy"></p><h2 id="actf2020-新生赛-upload-1" tabindex="-1"><a class="header-anchor" href="#actf2020-新生赛-upload-1" aria-hidden="true">#</a> [ACTF2020 新生赛]Upload 1</h2><p>打开题目显示的是一个文件上传，但是限制上传文件后缀名为jpg、png、gif。<br><img src="'+n+'" alt="Upload1-1" loading="lazy"><img src="'+c+'" alt="Upload1-2" loading="lazy"> 创建payload文件98322.jpg<br><code>payload=GIF89a&lt;script language=&quot;php&quot;&gt;eval($_POST[&#39;shell&#39;]);&lt;/script&gt;</code><br><img src="'+d+'" alt="Upload1-3" loading="lazy"> 提交的时候抓包，把文件的后缀名更改为phtml，再提交。<br><img src="'+m+'" alt="Upload1-4" loading="lazy"> 提示成功上传，访问看一下（一般默认是在upload目录下），看到了输入的文本“GIF89a”。<br><img src="'+b+'" alt="Upload1-5" loading="lazy"><img src="'+U+'" alt="Upload1-6" loading="lazy"> 通过中国蚁剑连接这个文件的地址，在根目录下发现了这个flag文件。<br><img src="'+F+'" alt="Upload1-7" loading="lazy"><img src="'+C+'" alt="Upload1-8" loading="lazy"> 打开文件，拿到flag。<br><img src="'+_+'" alt="Upload1-9" loading="lazy"></p><h2 id="极客大挑战-2019-php-1" tabindex="-1"><a class="header-anchor" href="#极客大挑战-2019-php-1" aria-hidden="true">#</a> [极客大挑战 2019]PHP 1</h2><p>打开题目看到的是一个前端界面，并且有提示网站备份。 <img src="'+T+'" alt="php1-1" loading="lazy"> 使用dirmap和dirsearch扫描网站目录得到网站备份为www.zip <img src="'+h+'" alt="php1-2" loading="lazy"><img src="'+y+'" alt="php1-9" loading="lazy"> 打开文件发现有三个php文件：index.php、flag.php和class.php。其中flag.php没有flag。 <img src="'+f+'" alt="php1-3" loading="lazy"><img src="'+B+'" alt="php1-4" loading="lazy"> 首先查看index.php，发现请求方式是get，参数为select，并且对参数进行了反序列化。 <img src="'+u+'" alt="php1-5" loading="lazy"> 然后查看class.php，发现只有username=admin，password=100的时候才给flag。 <img src="'+W+'" alt="php1-6" loading="lazy"> 于是编写payload，并把payload进行序列化。 <img src="'+z+'" alt="php1-7" loading="lazy"> 拿到flag。 <img src="'+E+'" alt="php1-8" loading="lazy"></p><h2 id="actf2020-新生赛-backupfile" tabindex="-1"><a class="header-anchor" href="#actf2020-新生赛-backupfile" aria-hidden="true">#</a> [ACTF2020 新生赛]BackupFile</h2><p>打开题目，看网页源码和抓包都什么都没有。题目里给的提示是找到源文件。<br><img src="'+k+'" alt="BackupFile1-1" loading="lazy"><br> 使用dirsearch和dirmap扫描网站目录，dirmap没扫出来。发现扫出来了index.php.bak。<br> 于是尝试下载这个文件，打开后看到源码。<br><img src="'+x+'" alt="BackupFile1-3" loading="lazy"><br> get传递参数key，并且是 == 的弱等于，所以构造payload：key=123。</p><blockquote><p>弱比较：如果比较一个数字和字符串或者比较涉及到数字内容的字符串，则字符串会被转换成数值并且比较按照数值来进行，在比较时该字符串的开始部分决定了它的值，如果该字符串以合法的数值开始，则使用该数值，否则其值为0。</p></blockquote><p><img src="'+M+'" alt="BackupFile1-4" loading="lazy"></p><h2 id="roarctf-2019-easy-calc-1" tabindex="-1"><a class="header-anchor" href="#roarctf-2019-easy-calc-1" aria-hidden="true">#</a> [RoarCTF 2019]Easy Calc 1</h2><p>打开这个题，查看网页源码，发现被注释的script中有calc.php页面。<br><img src="'+q+'" alt="EasyCale1-1" loading="lazy"> 进入calc.php页面查看，发现过滤了单双引号等字符。<br><img src="'+K+'" alt="EasyCale1-2" loading="lazy"> 编写进入根目录的payload，发现了f1agg文件。</p><blockquote><p>var_dump()是用来打印的；scandir()用来获取目录文件；因为‘/’被过滤了，所以chr(47)是斜线‘/’的ascii编码。</p></blockquote><p><img src="'+w+'" alt="EasyCale1-3" loading="lazy"></p><p>编写读取f1agg文件的payload。</p><blockquote><p>file_get_contents()是吧整个文件读入到一个字符串，所以这里用来拼接f1aggde ascii编码。chr(102):f;chr(49):1;chr(97):a;chr(103):g。</p></blockquote><p><img src="'+j+'" alt="EasyCale1-4" loading="lazy"> 拿到flag。<br><img src="'+P+'" alt="EasyCale1-5" loading="lazy"></p><h2 id="极客大挑战-2019-buyflag-1" tabindex="-1"><a class="header-anchor" href="#极客大挑战-2019-buyflag-1" aria-hidden="true">#</a> [极客大挑战 2019]BuyFlag 1</h2><p>首先对前端页面进行审计，发现有index.php和pay.php两个页面。<br><img src="'+v+'" alt="BuyFlag-1" loading="lazy"><br> 打开pay.php页面发现提示是要学生身份和花钱购买flag，所以抓包查看。 <img src="'+G+'" alt="BuyFlag-2" loading="lazy"> 在数据包中把GET改为POST、增加Content-Type:application/x-www-form-urlencoded、把user改为1和增加password=404a&amp;money=1e9</p><blockquote><p>这里是弱匹配，而且要求密码不能是数字，所以把password设置为404a。money要求是一亿，直接写100000000会显示太长，所以换成1e9。</p></blockquote><p><img src="'+S+'" alt="BuyFlag-3" loading="lazy"></p><h2 id="bjdctf2020-easy-md5-1" tabindex="-1"><a class="header-anchor" href="#bjdctf2020-easy-md5-1" aria-hidden="true">#</a> [BJDCTF2020]Easy MD5 1</h2><p>前端页面和cookie都没有发现问题，然后尝试抓包，发现又md5函数。<br><img src="'+O+'" alt="EasyMd5-1" loading="lazy"><br><img src="'+A+'" alt="EasyMd5-2" loading="lazy"><br> 然后使用字符串ffifdyop绕过包含md5函数的sql语句。这个字符串经过md5函数之后会永真。<br><img src="'+D+'" alt="EasyMd5-3" loading="lazy"><br> 然后出现了新的界面。<br><img src="'+I+'" alt="EasyMd5-4" loading="lazy"><br> 尝试抓包，查看到源码。<br><img src="'+V+'" alt="EasyMd5-5" loading="lazy"><br> 根据源码可以看出传入的两个值a和b不能相等，但是md5要相同，用的是两个等号，弱类型。于是get传参直接写两个数组：a[]=1&amp;b[]=2</p><blockquote><ol><li>md5值都是两个0e开头的，php会认为它是科学计数法，而0的多少次方都是0；</li><li>md5不能处理数组，导致函数返回null。而null是等于null的，导致了绕过。</li></ol></blockquote><p>又出现了新的页面。<br><img src="'+H+'" alt="EasyMd5-6" loading="lazy"><br> 查看判断条件后，抓包，把GET改为POST并传递参数：param1[]=1&amp;param2[]=2<br> 得到flag。<br><img src="'+J+'" alt="EasyMd5-7" loading="lazy"></p>',27),Z=[R];function $(L,Q){return i(),p("div",null,Z)}const Y=a(N,[["render",$],["__file","BUUCTF-Web.html.vue"]]);export{Y as default};
