import{_ as n,V as t,W as h,X as r,Y as a,$ as s,Z as e,y as d}from"./framework.0d0b2430.js";const c={},i=e('<h1 id="信息收集" tabindex="-1"><a class="header-anchor" href="#信息收集" aria-hidden="true">#</a> 信息收集</h1><p>信息可以分开成架构、网站搭建、WAF等。</p><h2 id="网站搭建习惯" tabindex="-1"><a class="header-anchor" href="#网站搭建习惯" aria-hidden="true">#</a> 网站搭建习惯</h2><h3 id="目录型站点" tabindex="-1"><a class="header-anchor" href="#目录型站点" aria-hidden="true">#</a> 目录型站点</h3><p>原则上是一个网站，但区别在于目录下的相差。 例： C:/www/root；C:/www/root/bbs<br> 但两个网站是两套程序，一个网站源码出现漏洞，另一个网站也会遭殃，就等于给予了两套漏洞方案。<br> 可以通过目录扫描工具查询。</p><h3 id="端口类站点" tabindex="-1"><a class="header-anchor" href="#端口类站点" aria-hidden="true">#</a> 端口类站点</h3><p>在同一台服务器上，以端口来把网吧进行分开，一个网站出现安全问题，也会导致另一个网站出现安全问题。<br> 进行端口扫描，或者在网上搜索信息。</p><h3 id="子域名站点" tabindex="-1"><a class="header-anchor" href="#子域名站点" aria-hidden="true">#</a> 子域名站点</h3><p>两个网站可能不在同一个服务器上。<br> 那IP扫描工具查，如果不同，则说明可能是在不同的服务器上。<br> 例如：xiaodi8.com全部指向47.1.1.1地址。</p><h3 id="类似域名站点" tabindex="-1"><a class="header-anchor" href="#类似域名站点" aria-hidden="true">#</a> 类似域名站点</h3><p>出自于同一个公司的网站，基于域名后缀的更改。</p><h3 id="旁注、c段类站点" tabindex="-1"><a class="header-anchor" href="#旁注、c段类站点" aria-hidden="true">#</a> 旁注、C段类站点</h3><p><strong>旁注</strong>：同服务器不同站点。<br> 前提条件：多个站点服务器<br> 例子: 192.168.1.100<br> ​ <a href="www.a.com">www.a.com</a><br> ​ <a href="www.b.com">www.b.com</a><br> 独立站点服务器</p><p><strong>C段</strong>：同网段不同服务器不同站点<br> 例子：<br> 192.168.1.100<br> ​ <a href="www.a.com">www.a.com</a><br> ​ <a href="www.b.com">www.b.com</a></p><p>192.168.1.101<br> ​ <a href="www.c.com">www.c.com</a><br> ​ <a href="www.d.com">www.d.com</a></p><h3 id="搭建软件类站点" tabindex="-1"><a class="header-anchor" href="#搭建软件类站点" aria-hidden="true">#</a> 搭建软件类站点</h3><p>一体化搭建软件：宝塔、PHPStudy、WMAP\\INMAP<br> 这些软件有常规的搭配数据库以及默认账号密码，可以成为突破思路。</p><h2 id="waf" tabindex="-1"><a class="header-anchor" href="#waf" aria-hidden="true">#</a> WAF</h2>',18),b=r("strong",null,"定义",-1),l=r("br",null,null,-1),p=r("strong",null,"特征",-1),w=r("br",null,null,-1),f=r("strong",null,"工具",-1),_={href:"https://github.com/EnableSecurity/wafw00f",target:"_blank",rel:"noopener noreferrer"},u=r("br",null,null,-1),g=e('<h2 id="app及其他资产等" tabindex="-1"><a class="header-anchor" href="#app及其他资产等" aria-hidden="true">#</a> APP及其他资产等</h2><p>APK反编译：apkAnalyser<br> 拿到IP，无web框架下的第三方测试：nmap扫描；使用黑暗网站：Shodan、ZoomEye、Fofa进行端口扫描。</p><h2 id="资产监控" tabindex="-1"><a class="header-anchor" href="#资产监控" aria-hidden="true">#</a> 资产监控</h2><p><strong>Github监控</strong></p><ol><li>便于收集整理最新exp或poc；</li><li>便于发现相关测试目标的资产。</li></ol><blockquote><p>POC = Proof of Concept中文意思是“观点证明”。这个短语并非仅仅在漏洞报告中使用，甲方在项目招标过程中也常常要求乙方提供POC，即证明你的方案或者产品能达到声称的功能或性能，漏洞报告中的POC则是一段说明或者一个攻击的样例，使得读者能够确认这个漏洞是真实存在的。 EXP = Exploit的中文意思是“漏洞利用”。意思是一段对漏洞如何利用的详细说明或者一个演示的漏洞攻击代码，可以使得读者完全了解漏洞的机理以及利用的方法。</p></blockquote><p><strong>各种子域名查询</strong><br><strong>DNS，备案，证书</strong><br><strong>全球节点请求</strong><br> 枚举爆破或解析子域名对应</p><p><strong>黑暗引擎相关搜索</strong><br> fofa、shodan、zoomeye</p><p><strong>微信公众号接口获取</strong><br><strong>内部群内部应用内部接口</strong><br><strong>黑暗引擎实现域名端口等收集</strong><br><strong>全自动域名收集枚举优秀脚本使用</strong><br> 1.以XXXXXX为例，从标题，域名等收集<br> 2.以XXXXXX为例，全自动脚本使用收集</p><p><strong>SRC</strong><br> 目标中的信息收集全覆盖<br> 补天上专属SRC简易测试</p><p><strong>利用其他第三方接口获取更多信息</strong></p>',11);function m(x,P){const o=d("ExternalLinkIcon");return t(),h("div",null,[i,r("p",null,[b,a("：Web应用防护系统。利用国际上公认的一种说法：web应用防火墙是通过执行一系列针对HTTP/HTTPS的安全策略来专门为Web应用提供保护的一款产品。"),l,p,a("：部分指纹头里有 X-Powered-BY：WAF"),w,f,a("：wafw00f "),r("a",_,[a("https://github.com/EnableSecurity/wafw00f"),s(o)]),u,a(" WAF就相当于一道墙，有WAF则不要用扫描工具进行扫描。")]),g])}const C=n(c,[["render",m],["__file","2.信息收集.html.vue"]]);export{C as default};
